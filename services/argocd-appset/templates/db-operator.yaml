{{- if and (.Values.dbOperator) (.Values.dbOperator.enable) -}}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: db-operator
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
    argocd.argoproj.io/sync-options: "Prune=false" # Disable pruning for initial sync
spec:
  project: default
  source:
    repoURL: "{{ $.Values.repoUrl }}"
    path: services/helm/db-operator
    targetRevision: "{{ $.Values.targetRevision }}"
    helm:
      valueFiles:
        - values.yaml
      parameters:
        - name: stackgres-operator.authentication.user
          value: "{{ $.Values.dbOperator.creds.user }}"
        - name: stackgres-operator.authentication.password
          value: "{{ $.Values.dbOperator.creds.pw }}"
        - name: stackgres-operator.grafana.user
          value: "{{ $.Values.grafanaCreds.admin }}"
        - name: stackgres-operator.grafana.password
          value: "{{ $.Values.grafanaCreds.pw }}"
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: db-operator
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
      - ApplyOutOfSyncOnly=true
      - Replace=true # Required for CRD updates
      - SkipDryRunOnMissingResource=true # Skip dry-run if CRDs not yet present
      - RespectExistingResources=true # Keep existing RBAC resources
    retry:
      limit: 2
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
    managedNamespaceMetadata:
      labels:
        argocd.argoproj.io/sync-options: RespectExistingResources=true
{{- end }}
