{{- if and (.Values.tapir) (.Values.tapir.enable) -}}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: tapir
  namespace: {{ .Values.argoNamespace | default "argocd" }}
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: {{ .Values.argoProject | default "default" }}
  revisionHistoryLimit: 3
  sources:
    - repoURL: "https://github.com/PacoVK/tapir-helm.git"
      path: charts
      targetRevision: "main"
  helm:
    valuesObject:
      # Unpublished helm chart - hence workaround
      # configuration: https://github.com/PacoVK/tapir/blob/main/docs/configuration.md
      # ┌─────────────────────────────────────────────────────────────────────────────┐
      # │   Service Configuration                                                     │
      # └─────────────────────────────────────────────────────────────────────────────┘
      service:
        type: ClusterIP
        portHttps: 8080
      deployment:
        # ┌─────────────────────────────────────────────────────────────────────────────┐
        # │   Resource Configuration                                                    │
        # └─────────────────────────────────────────────────────────────────────────────┘
        resources:
          requests:
            cpu: 256m
            memory: 256Mi
        configuration:
          # ┌─────────────────────────────────────────────────────────────────────────────┐
          # │   OAuth Configuration                                                     │
          # └─────────────────────────────────────────────────────────────────────────────┘
          auth:
            endpoint: "https://github.com/login/oauth/authorize"
            clientId: {{ .Values.tapir.sso_clientID }}
            clientSecret: {{ .Values.tapir.sso_clientSecret }}
              # ┌─────────────────────────────────────────────────────────────────────────────┐
              # │   Backend Configuration                                                   │
              # └─────────────────────────────────────────────────────────────────────────────┘
              # Supported backends: elasticsearch, dynamodb, cosmosdb (nonsql compatible)
          backends:
            type: "cosmosdb"
            cosmosdb:
              host: {{ .Values.mongoDBCreds.host }}
              user: {{ .Values.mongoDBCreds.user }}
              password: {{ .Values.mongoDBCreds.pw }}
                # ┌─────────────────────────────────────────────────────────────────────────────┐
                # │   Storage Configuration                                                     │
                # └─────────────────────────────────────────────────────────────────────────────┘
          storage:
            # -- Storage type: s3, azureBlob, local
            type: "local"
            # -- Amount of minutes the signed download url is valid
            storageAccessDuration: 5
      persistence:
        enabled: true
        storageClass: "csi-hostpath-sc"
        accessModes: [ "ReadWriteOnce" ]
        size: "5Gi"
      # ┌─────────────────────────────────────────────────────────────────────────────┐
      # │   Autoscaling Configuration                                                │
      # └─────────────────────────────────────────────────────────────────────────────┘
      autoscaling:
        enabled: true
        minReplicas: 1
        maxReplicas: 5
        targetCPUUtilizationPercentage: 75
        targetMemoryUtilizationPercentage: 75
  destination:
    server: {{ .Values.destinationServer | default "https://kubernetes.default.svc" }}
    namespace: tapir
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
    retry:
      limit: 1
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 1m
{{- end }}
